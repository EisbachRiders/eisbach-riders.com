// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Counter renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="makeStyles-container-1"
      >
        <button
          class="MuiButtonBase-root MuiIconButton-root"
          tabindex="0"
          type="button"
        >
          <span
            class="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              class="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 13H5v-2h14v2z"
              />
            </svg>
          </span>
          <span
            class="MuiTouchRipple-root"
          />
        </button>
        <form
          autocomplete="off"
          class="makeStyles-container-1"
          novalidate=""
        >
          <label
            class="MuiFormLabel-root MuiInputLabel-root visually-hidden MuiInputLabel-animated"
            for="counter"
          >
            Quantity
          </label>
          <div
            class="MuiInputBase-root makeStyles-input-2"
          >
            <input
              class="MuiInputBase-input makeStyles-inputProp-3"
              id="counter"
              readonly=""
              type="number"
              value=""
            />
          </div>
        </form>
        <button
          class="MuiButtonBase-root MuiIconButton-root"
          tabindex="0"
          type="button"
        >
          <span
            class="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              class="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
              />
            </svg>
          </span>
          <span
            class="MuiTouchRipple-root"
          />
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="makeStyles-container-1"
    >
      <button
        class="MuiButtonBase-root MuiIconButton-root"
        tabindex="0"
        type="button"
      >
        <span
          class="MuiIconButton-label"
        >
          <svg
            aria-hidden="true"
            class="MuiSvgIcon-root"
            focusable="false"
            role="presentation"
            viewBox="0 0 24 24"
          >
            <path
              d="M19 13H5v-2h14v2z"
            />
          </svg>
        </span>
        <span
          class="MuiTouchRipple-root"
        />
      </button>
      <form
        autocomplete="off"
        class="makeStyles-container-1"
        novalidate=""
      >
        <label
          class="MuiFormLabel-root MuiInputLabel-root visually-hidden MuiInputLabel-animated"
          for="counter"
        >
          Quantity
        </label>
        <div
          class="MuiInputBase-root makeStyles-input-2"
        >
          <input
            class="MuiInputBase-input makeStyles-inputProp-3"
            id="counter"
            readonly=""
            type="number"
            value=""
          />
        </div>
      </form>
      <button
        class="MuiButtonBase-root MuiIconButton-root"
        tabindex="0"
        type="button"
      >
        <span
          class="MuiIconButton-label"
        >
          <svg
            aria-hidden="true"
            class="MuiSvgIcon-root"
            focusable="false"
            role="presentation"
            viewBox="0 0 24 24"
          >
            <path
              d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
            />
          </svg>
        </span>
        <span
          class="MuiTouchRipple-root"
        />
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
